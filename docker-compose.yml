version: '3'
services:
    left_client1:
        image: telegraf:1.18
        container_name: left_client1
        volumes:
            - "${MQTT_DEMO_PATH}/telegraf/left1.conf:/etc/telegraf/telegraf.conf"
        depends_on:
            - broker

    left_client2:
        image: telegraf:1.18
        container_name: left_client2
        volumes:
            - "${MQTT_DEMO_PATH}/telegraf/left2.conf:/etc/telegraf/telegraf.conf"
        depends_on:
            - broker

    right_client:
        image: telegraf:1.18
        container_name: right_client
        volumes:
            - "${MQTT_DEMO_PATH}/telegraf/right.conf:/etc/telegraf/telegraf.conf"
        environment:
            - INFLUX_HOST=${INFLUX_HOST}
            - INFLUX_ORG=${INFLUX_ORG}
            - INFLUX_TOKEN=${INFLUX_TOKEN}
        depends_on: 
            - broker
            - left_client

    broker:
        image: hivemq/hivemq4
        container_name: broker
        ports:
            - "1883:1883"
            - "8080:8080"
    
    influxd:
        image: influxdb:2.0.7
        container_name: influxd
        volumes:
            - "${MQTT_DEMO_PATH}/influxdb/data:/var/lib/.influxdbv2"
        environment:
            - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUX_USERNAME}
            - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUX_PASSWORD}
            - DOCKER_INFLUXDB_INIT_ORG=${INFLUX_ORG}
            - DOCKER_INFLUXDB_INIT_BUCKET=mqtt
            - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUX_TOKEN}
        ports:
            - "8086:8086"

    influx_cli:
        image: influxdb:2.0.7
        container_name: influx_cli
        environment:
            - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUX_USERNAME}
            - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUX_PASSWORD}
            - DOCKER_INFLUXDB_INIT_ORG=${INFLUX_ORG}
            - DOCKER_INFLUXDB_INIT_BUCKET=mqtt
            - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUX_TOKEN}
        deploy:
            restart_policy:
                condition: on-failure
                delay: 5s
        depends_on:
            - influxd
        volumes:
            - "${MQTT_DEMO_PATH}/cpu_average_5m.flux:/cpu_average_5m.flux"
            - "${MQTT_DEMO_PATH}/mem_average_5m.flux:/mem_average_5m.flux"
            - "${MQTT_DEMO_PATH}/cli_entrypoint.sh:/cli_entrypoint.sh"
        entrypoint: /cli_entrypoint.sh

    nodered:
        image: nodered/node-red
        container_name: nodered
        depends_on: 
            - influxd
            - broker
        ports:
            - "1880:1880"
        volumes:
            - "${MQTT_DEMO_PATH}/node-red.json:/data/mqtt-demo.json"
            - "${HOME}/.node-red:/data"

    api:
        # build:
        #     context: .
        #     dockerfile: Dockerfile
        image: python-docker
        container_name: api
        ports:
            - "8000:8000"
        environment:
            - INFLUX_HOST=${DOCKER_INFLUX_HOST}
            - INFLUX_TOKEN=${INFLUX_TOKEN}
            - INFLUX_BUCKET=${INFLUX_BUCKET}
            - INFLUX_ORG=${INFLUX_ORG}
            - FLUX_QUERIES_PATH=/mqtt_api/flux_queries

    py_publisher:
        image: python-mqtt-client
        deploy:
            mode: replicated
            replicas: 3
        depends_on: 
            - broker
